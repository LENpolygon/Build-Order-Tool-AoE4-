/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/main";
exports.ids = ["pages/main"];
exports.modules = {

/***/ "./pages/main.js":
/*!***********************!*\
  !*** ./pages/main.js ***!
  \***********************/
/***/ (() => {

eval("//////////////////////////////////////////////////\n// DEFINE civilizations\n//////////////////////////////////////////////////\nconst civilizations = [\n    {\n        \"civilization\": \"Abbasid Dynasty\",\n        \"abbr\": \"AD\",\n        \"focus\": \"Technology, Camels and City Planning\",\n        \"difficulty\": 2,\n        \"icon\": \"flagAD.png\",\n        \"uniqueunits\": [\n            306,\n            176\n        ]\n    },\n    {\n        \"civilization\": \"Chinese\",\n        \"abbr\": \"CH\",\n        \"focus\": \"Dynasties, Gunpowder and Expansion\",\n        \"difficulty\": 3,\n        \"icon\": \"flagCH.png\",\n        \"uniqueunits\": [\n            310,\n            307,\n            52,\n            287,\n            175,\n            437,\n            261\n        ]\n    },\n    {\n        \"civilization\": \"Delhi Sultanate\",\n        \"abbr\": \"DS\",\n        \"focus\": \"Military, Research and Defense\",\n        \"difficulty\": 3,\n        \"icon\": \"flagDS.png\",\n        \"uniqueunits\": [\n            59,\n            136,\n            311,\n            300\n        ]\n    },\n    {\n        \"civilization\": \"French\",\n        \"abbr\": \"FR\",\n        \"focus\": \"Trade, Cavalry and Keeps\",\n        \"difficulty\": 1,\n        \"uniqueunits\": [\n            181,\n            301,\n            410,\n            432\n        ]\n    },\n    {\n        \"civilization\": \"English\",\n        \"abbr\": \"EN\",\n        \"focus\": \"Defense, Longbows and Economy\",\n        \"difficulty\": 1,\n        \"uniqueunits\": [\n            174\n        ]\n    },\n    {\n        \"civilization\": \"Holy Roman Empire\",\n        \"abbr\": \"HR\",\n        \"focus\": \"Infantry, Religion and Defense\",\n        \"difficulty\": 2,\n        \"uniqueunits\": [\n            58,\n            305\n        ]\n    },\n    {\n        \"civilization\": \"Mongols\",\n        \"abbr\": \"MO\",\n        \"focus\": \"Aggression, Nomadic and Mobility\",\n        \"difficulty\": 3,\n        \"uniqueunits\": [\n            60,\n            177,\n            292,\n            262\n        ]\n    },\n    {\n        \"civilization\": \"Rus\",\n        \"abbr\": \"RU\",\n        \"focus\": \"Expansion, Cavalry and Hunting\",\n        \"difficulty\": 2,\n        \"uniqueunits\": [\n            440,\n            304,\n            295,\n            138,\n            255,\n            252,\n            263,\n            415\n        ]\n    }\n];\n//////////////////////////////////////////////////\n// DEFINE menu structure\n//////////////////////////////////////////////////\nvar headerData = {\n    \"Units\": {\n        \"Land Unit\": [],\n        \"Water Unit\": []\n    },\n    \"Buildings\": {\n        \"Structure\": [],\n        \"Landmark\": []\n    },\n    \"Technologies\": {\n        \"Economic\": [],\n        \"Blacksmith\": [],\n        \"Upgrade\": [],\n        \"Technology\": [],\n        \"Empl\": []\n    },\n    \"Miscellaneous\": {\n        \"Resource\": [],\n        \"Age\": [],\n        \"Ability\": [],\n        \"Dynasty\": [],\n        \"Flag\": [],\n        \"Formation\": [],\n        \"Influence\": [],\n        \"Move\": [],\n        \"Victory\": [],\n        \"Misc\": []\n    }\n};\nfor(var header in headerData){\n    for(var genre in headerData[header]){\n        headerData[header][genre] = [\n            [],\n            [],\n            [],\n            []\n        ]; // add ages\n    }\n}\n//////////////////////////////////////////////////\n// READ URLSearchParams data\n//////////////////////////////////////////////////\nvar selectedciv = null;\nvar buildorder = null;\nvar usp = new URLSearchParams(window.location.search);\nif (isNaN(usp.get(\"c\"))) {\n    for(let i = 0; i < civilizations.length; i++){\n        if (usp.get(\"c\") == civilizations[i].abbr) {\n            selectedciv = civilizations[i];\n            break;\n        }\n    }\n}\nif (isNaN(usp.get(\"s\"))) {\n    buildorder = LZString.decompressFromEncodedURIComponent(usp.get(\"s\"));\n} else if (isNaN(usp.get(\"b\"))) {\n    buildorder = usp.get(\"b\");\n}\nif (!selectedciv) {\n    window.location.href = \"index.html?c=EN&s=AwLmwHwMQSwJwM4BcAEA2FBvArAZgL4pID2WA7NvhKOBAHICmAHqjgUaZhVaAEyQAVABYMAdil5Y8hAEYBXGABsAJlgAcAFkIosATjKEAhqNUBbGKIblgVAIxhIuKe3lLVmXe2OqAxnNZoalS8DhAazrIKKnoGKN4o5pZYaLpUuCD8EJi27JYsERzJQRDpuJAAQlHutrY2KADuMEhCEgUAZnDEptZpIBqQAIJtSAxwKGXAyakoCGKqhoqK7Z3dmCmEJEVU2KGVbli2akENTS3hbIQdXVsQQA\";\n}\n//////////////////////////////////////////////////\n// INITIALIZE\n//////////////////////////////////////////////////\nvar buildingTimeModifier = selectedciv.abbr == \"CH\" ? 0.5 : 1;\nconst upgradeDSTimeModifier = [\n    3,\n    3.5,\n    5,\n    15\n];\nvar str = \"\";\nvar index; // of table\nvar tooltipindex = -1;\n//////////////////////////////////////////////////\n// WRITE civilizations menu\n//////////////////////////////////////////////////\nfor(let i = 0; i < civilizations.length; i++){\n    str += \"<li\";\n    if (civilizations[i].abbr == selectedciv.abbr) {\n        str += ' class=\"active\"';\n    }\n    str += '><a href=\"index.html?c=' + civilizations[i].abbr + '\">' + civilizations[i].civilization + \"</a></li>\";\n}\nstr += '<li><div id=\"favorite_build_button_container\"></div></li>';\ndocument.getElementById(\"civilizationsMenu\").innerHTML = str;\n//////////////////////////////////////////////////\n// SELECT row\n//////////////////////////////////////////////////\nfunction getSelectedRow() {\n    var table = document.getElementById(\"buildTable\");\n    for(var i1 = 1; i1 < table.rows.length; i1++){\n        table.rows[i1].onclick = function() {\n            if (typeof index !== \"undefined\") {\n                table.rows[index].classList.toggle(\"selected\");\n            }\n            index = this.rowIndex;\n            this.classList.toggle(\"selected\");\n        };\n    }\n}\n//////////////////////////////////////////////////\n// GET page width\n//////////////////////////////////////////////////\nfunction getWidth() {\n    return Math.max(document.body.scrollWidth, document.documentElement.scrollWidth, document.body.offsetWidth, document.documentElement.offsetWidth, document.documentElement.clientWidth);\n}\n//////////////////////////////////////////////////\n// MANIPULATE table\n//////////////////////////////////////////////////\nfunction upNdown(direction) {\n    var rows = document.getElementById(\"buildTable\").rows;\n    var parent = rows[index].parentNode;\n    if (direction === \"up\") {\n        if (index > 1) {\n            parent.insertBefore(rows[index], rows[index - 1]);\n            index--;\n        }\n    }\n    if (direction === \"down\") {\n        if (index < rows.length - 1) {\n            parent.insertBefore(rows[index + 1], rows[index]);\n            index++;\n        }\n    }\n    parent.focus();\n}\nfunction createRow() {\n    if (typeof index !== \"undefined\") {\n        var row = document.getElementById(\"buildTable\").insertRow(index + 1);\n        row.innerHTML = '<td contenteditable=\"true\">0:00</td><td contenteditable=\"true\"></td>';\n        getSelectedRow();\n    }\n    row.focus();\n}\nfunction deleteRow() {\n    if (typeof index !== \"undefined\") {\n        document.getElementById(\"buildTable\").deleteRow(index);\n        getSelectedRow();\n        index = undefined;\n    }\n}\nfunction clearRow() {\n    var rows = document.getElementById(\"buildTable\").rows;\n    for(let i2 = 0; i2 < rows.length - 1; i2++){\n        rows[i2 + 1].innerHTML = '<td contenteditable=\"true\"></td><td contenteditable=\"true\"></td>';\n    }\n}\n//////////////////////////////////////////////////\n// CONVERT seconds to time\n//////////////////////////////////////////////////\nfunction sToTime(input) {\n    var output = \"\";\n    if (input >= 60) {\n        output += Math.floor(input / 60) + \"m \";\n    }\n    output += Math.round(input % 60) + \"s\";\n    return output;\n}\n//////////////////////////////////////////////////\n// FORMAT and PRINT image\n//////////////////////////////////////////////////\nconst imgstr = [\n    '<a class=\"tooltip\"><img src=\"img/',\n    '.png\" class=\"icon\" data-index=\"',\n    '\" data-info=\"',\n    '\" alt=\"',\n    '\" style=\"background: radial-gradient(circle, rgba(60,68,66,0.8) 0%, ',\n    \" 80%); \",\n    '\"></a>'\n];\nconst tableitems = [\n    [\n        \"food\",\n        \"resourcefoodicon\"\n    ],\n    [\n        \"wood\",\n        \"resourcewoodicon\"\n    ],\n    [\n        \"gold\",\n        \"resourcegoldicon\"\n    ],\n    [\n        \"stone\",\n        \"resourcestoneicon\"\n    ],\n    [\n        \"time\",\n        \"timetobuild\"\n    ],\n    [\n        \"pop\",\n        \"house\"\n    ]\n];\nfunction formatImage(reference, value, showTooltip) {\n    var tooltip = \"\";\n    if (showTooltip) {\n        tooltip = '<div class=\"tooltipColumn1\">';\n        tooltip += '<img src=\"img/' + reference[selectedciv.abbr] + '.png\"></img><br/><div class=\"smallIcons\">';\n        for(let h = 0; h < tableitems.length; h++){\n            if (reference[tableitems[h][0]]) {\n                if (selectedciv.abbr == \"CH\" && (reference.genre == \"Building\" || reference.genre == \"Landmark\") && tableitems[h][0] == \"time\") {\n                    tooltip += '<img src=\"img/' + tableitems[h][1] + '.png\">' + sToTime(reference[tableitems[h][0]] * buildingTimeModifier) + \"<br/>\";\n                } else if (selectedciv.abbr == \"DS\" && (reference.genre == \"Technology\" || reference.genre == \"Upgrade\" || reference.genre == \"Blacksmith\")) {\n                    if (tableitems[h][0] == \"time\") {\n                        tooltip += '<img src=\"img/' + tableitems[h][1] + '.png\">' + sToTime(reference[tableitems[h][0]] * upgradeDSTimeModifier[reference.age - 1]) + \"<br/>\";\n                    }\n                } else {\n                    tooltip += '<img src=\"img/' + tableitems[h][1] + '.png\">' + (tableitems[h][0] == \"time\" ? sToTime(reference[tableitems[h][0]]) : reference[tableitems[h][0]]) + \"<br/>\";\n                }\n            }\n        }\n        tooltip += '</div></div><div class=\"tooltipColumn2\"><header>' + reference.name + \" (age: \" + reference.age + \"+)</header></br></br>\" + reference.description + \"</div>\";\n    }\n    return reference.color == \"transparent\" ? imgstr[0] + reference[selectedciv.abbr] + imgstr[1] + value + imgstr[2] + LZString.compressToEncodedURIComponent(tooltip) + imgstr[3] + reference.name + imgstr[6] : imgstr[0] + reference[selectedciv.abbr] + imgstr[1] + value + imgstr[2] + LZString.compressToEncodedURIComponent(tooltip) + imgstr[3] + reference.name + imgstr[4] + reference.color + imgstr[5] + imgstr[6];\n}\n//////////////////////////////////////////////////\n// SANITIZE and CONVERT images to values\n//////////////////////////////////////////////////\nfunction sanitizeNconvert(input) {\n    input = \" \" + input;\n    var array = input.split(\"<\");\n    var output = array[0].substring(1);\n    for(let i3 = 1; i3 < array.length; i3++){\n        var array2 = array[i3].split(\">\");\n        if (/data-index+\\S+/.test(array2[0])) {\n            output += \"{\" + array2[0].match(/data-index+\\S+/)[0].split('\"')[1] + \"}\";\n        }\n        for(let j = 1; j < array2.length; j++){\n            output += array2[j];\n        }\n    }\n    return output.replace(/&nbsp;/g, \" \").replace(/&/g, \"\");\n}\n//////////////////////////////////////////////////\n// CONVERT value back to image\n//////////////////////////////////////////////////\nfunction convertBack(input, data) {\n    input = \" \" + input;\n    var array = input.split(\"{\");\n    var output = array[0].substring(1);\n    for(let k = 1; k < array.length; k++){\n        var array2 = array[k].split(\"}\");\n        if (Number.isInteger(parseInt(array2[0]))) {\n            const i4 = parseInt(array2[0]);\n            output += formatImage(data[i4], i4, true);\n        }\n        for(let j = 1; j < array2.length; j++){\n            output += array2[j];\n        }\n    }\n    return output;\n}\n//////////////////////////////////////////////////\n// SAVE event\n//////////////////////////////////////////////////\nfunction saveToURL() {\n    var rows = document.getElementById(\"buildTable\").rows;\n    var str1 = \"\";\n    for(let i5 = 1; i5 < rows.length; i5++){\n        str1 += sanitizeNconvert(rows[i5].cells[0].innerHTML);\n        str1 += \"|\";\n        str1 += sanitizeNconvert(rows[i5].cells[1].innerHTML);\n        str1 += \"|\";\n    }\n    window.history.replaceState(\"Home\", \"AGE OF EMPIRES 4 - BUILD ORDER TOOL\", \"index.html?c=\" + selectedciv.abbr + \"&s=\" + LZString.compressToEncodedURIComponent(str1));\n    navigator.clipboard.writeText(window.location.href).then(function() {\n        console.log(\"Async: Copying to clipboard was successful!\");\n    }, function(err) {\n        console.error(\"Async: Could not copy text: \", err);\n    });\n}\n//////////////////////////////////////////////////\n// READ icons.JSON data\n//////////////////////////////////////////////////\nasync function loadiconsJSON() {\n    const response = await fetch(\"icons.json\");\n    const data = await response.json();\n    for(let i10 = 0; i10 < data.length; i10++){\n        var matching = true;\n        if (data[i10][selectedciv.abbr]) {\n            for(var header1 in headerData){\n                for(var genre in headerData[header1]){\n                    if (data[i10].genre == genre) {\n                        headerData[header1][genre][data[i10].age - 1].push(i10);\n                        matching = false;\n                        break;\n                    }\n                }\n                if (!matching) break;\n            }\n            if (matching) {\n                headerData[\"Miscellaneous\"][\"Misc\"][data[i10].age - 1].push(i10);\n            }\n        }\n    }\n    //////////////////////////////////////////////////\n    // WRITE current civ\n    //////////////////////////////////////////////////\n    document.getElementById(\"civilizationFocus\").innerHTML = selectedciv.focus;\n    document.getElementById(\"civilizationFlag\").innerHTML = '<img src=\"img/flag' + selectedciv.abbr + '.png\"></img>';\n    var str2 = selectedciv.civilization + \" \";\n    for(let i6 = 0; i6 < 3; i6++){\n        if (selectedciv.difficulty == i6) {\n            str2 += '<span style=\"color: #11141D\">';\n        }\n        str2 += \"\\u2605\";\n    }\n    str2 += \"</span>\";\n    document.getElementById(\"civilizationName\").innerHTML = str2;\n    str2 = \"\";\n    selectedciv.uniqueunits.forEach((element)=>{\n        str2 += formatImage(data[element], element, true);\n    });\n    document.getElementById(\"civilizationUniqueUnits\").innerHTML = str2;\n    //////////////////////////////////////////////////\n    // LOAD event\n    //////////////////////////////////////////////////\n    var buildarray;\n    if (buildorder) {\n        buildarray = sanitizeNconvert(buildorder).split(\"|\");\n    } else {\n        let vilval = selectedciv.abbr == \"FR\" ? 54 : 53;\n        let str3 = \"0:00|Click here to start editing your own build (only on PC for now...)|0:00|You can add icons by dragging them from the menu: {\" + vilval + '} |0:00|When you\\'re happy press \"Save and Copy\" and share your build!|';\n        window.history.replaceState(\"Home\", \"AGE OF EMPIRES 4 - BUILD ORDER TOOL\", \"index.html?c=\" + selectedciv.abbr + \"&b=\" + str3);\n        buildarray = sanitizeNconvert(str3).split(\"|\");\n    }\n    var rows = document.getElementById(\"buildTable\").rows;\n    for(let i7 = buildarray.length / 2 - (rows.length - 1); i7 > 1; i7--){\n        document.getElementById(\"buildTable\").insertRow(2);\n    }\n    var rows = document.getElementById(\"buildTable\").rows;\n    for(let i8 = 0; i8 < rows.length - 1; i8++){\n        rows[i8 + 1].innerHTML = '<td contenteditable=\"true\">' + convertBack(buildarray[i8 * 2], data) + '</td><td contenteditable=\"true\">' + convertBack(buildarray[i8 * 2 + 1], data) + \"</td>\";\n    }\n    //////////////////////////////////////////////////\n    // WRITE icons menu\n    //////////////////////////////////////////////////\n    var str2 = \"\";\n    for(var header1 in headerData){\n        str2 += '<section><header class=\"fold\">' + header1 + '</header><article class=\"boxed\">';\n        for(var genre in headerData[header1]){\n            for(let age = 0; age < 4; age++){\n                for(let i11 = 0; i11 < headerData[header1][genre][age].length; i11++){\n                    str2 += formatImage(data[headerData[header1][genre][age][i11]], headerData[header1][genre][age][i11], true);\n                }\n            }\n        }\n        str2 += \"</article></section>\";\n    }\n    document.getElementById(\"buildIcons\").innerHTML = str2;\n    //////////////////////////////////////////////////\n    // COLLAPSE\n    //////////////////////////////////////////////////\n    var coll = document.getElementsByClassName(\"fold\");\n    for(let i9 = 0; i9 < coll.length; i9++){\n        coll[i9].addEventListener(\"click\", function() {\n            this.classList.toggle(\"unfold\");\n            var content = this.nextElementSibling;\n            if (content.style.maxHeight) {\n                content.style.maxHeight = null;\n            } else {\n                content.style.maxHeight = content.scrollHeight + \"px\";\n            }\n        });\n    }\n    coll[0].click();\n    coll[1].click();\n    ///////////////////////////////////////////////////\n    // SHOW tooltips\n    ///////////////////////////////////////////////////\n    let tooltipContainer = document.getElementById(\"tooltipContainer\");\n    const tooltipBox = document.getElementById(\"tooltipBox\");\n    document.addEventListener(\"mousemove\", function checkHover(e) {\n        tooltipContainer.style.left = getWidth() > e.pageX + 400 ? e.pageX + 4 + \"px\" : e.pageX - 404 + \"px\";\n        tooltipContainer.style.top = e.pageY + 2 + \"px\";\n        const allTooltips = document.getElementsByClassName(\"tooltip\");\n        if (tooltipindex < 0 || !allTooltips.item(tooltipindex).querySelector(\":hover\")) {\n            for(var i12 = 0; i12 < allTooltips.length; i12++){\n                if (allTooltips.item(i12).querySelector(\":hover\")) {\n                    console.log(allTooltips.item(i12).firstChild.getAttribute(\"data-info\"));\n                    tooltipBox.innerHTML = LZString.decompressFromEncodedURIComponent(allTooltips.item(i12).firstChild.getAttribute(\"data-info\"));\n                    tooltipBox.style.display = \"block\";\n                    tooltipindex = i12;\n                    return;\n                }\n            }\n            tooltipBox.innerHTML = \"\";\n            tooltipBox.style.display = \"none\";\n            tooltipindex = -1;\n        }\n    });\n    getSelectedRow();\n} //////////////////////////////////////////////////\nloadiconsJSON();\ndocument.getElementById(\"tooltipBox\").style.display = \"none\";\n//////////////////////////////////////////////////\n// RANDOMIZE background\n//////////////////////////////////////////////////\nconst backgroundOptions = [\n    \"02celebration\",\n    \"03focuslongbowmen\",\n    \"04lordrobertsb\",\n    \"07raisedstakestwoknights\",\n    \"10mongoltrebuchet\",\n    \"11chinesetradecaravans\",\n    \"12mongolscharging\",\n    \"15paytributeb\",\n    \"alarm\"\n];\ndocument.getElementById(\"background\").style.backgroundImage = \"url(img/\" + backgroundOptions[Math.floor(Math.random() * backgroundOptions.length)] + \".png)\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/main.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/main.js"));
module.exports = __webpack_exports__;

})();